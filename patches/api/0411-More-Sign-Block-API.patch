From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Fri, 23 Jun 2023 12:16:35 -0700
Subject: [PATCH] More Sign Block API

Co-authored-by: SoSeDiK <mrsosedik@gmail.com>

diff --git a/src/main/java/org/bukkit/block/Sign.java b/src/main/java/org/bukkit/block/Sign.java
index 1fdb1144949adc3a2b5cbc3aca94d2f8e0c6d9ee..80a3bc5b62f186f24dec96d0806b6525c2a16401 100644
--- a/src/main/java/org/bukkit/block/Sign.java
+++ b/src/main/java/org/bukkit/block/Sign.java
@@ -182,9 +182,56 @@ public interface Sign extends TileState, Colorable {
     /**
      * Gets the player that is currently allowed to edit this sign. <br>
      * Edits from other players will be rejected if this value is not null.
+     * <br><br>You should prefer {@link #getAllowedEditorUniqueId()} if you
+     * only care whether this sign is being edited by someone
      *
      * @return the player allowed to edit this sign, or null
      */
     @Nullable
     public Player getAllowedEditor();
+    // Paper start - More Sign Block API
+    /**
+     * Gets the allowed editor's UUID.
+     * Edits from other players will be rejected if this value is not null.
+     *
+     * @return the allowed editor's UUID
+     */
+    @Nullable java.util.UUID getAllowedEditorUniqueId();
+
+    /**
+     * Sets the allowed editor's UUID
+     *
+     * @param uuid uuid
+     */
+    void setAllowedEditorUniqueId(@Nullable java.util.UUID uuid);
+
+    /**
+     * Compute the side facing the specified entity.
+     *
+     * @param entity the entity
+     * @return the side it is facing
+     */
+    default @NotNull Side getInteractableSideFor(org.bukkit.entity.@NotNull Entity entity) {
+        return this.getInteractableSideFor(entity.getLocation());
+    }
+
+    /**
+     * Compute the side facing the specific position.
+     *
+     * @param position the position
+     * @return the side the position is facing
+     */
+    default @NotNull Side getInteractableSideFor(io.papermc.paper.math.@NotNull Position position) {
+        return this.getInteractableSideFor(position.x(), position.z());
+    }
+
+    /**
+     * Compute the side facing the specific x and z coordinates.
+     *
+     * @param x the x coord
+     * @param z the z coord
+     * @return the side the coordinates are facing
+     */
+    @NotNull Side getInteractableSideFor(double x, double z);
+    // Paper end - More Sign Block API
 }
